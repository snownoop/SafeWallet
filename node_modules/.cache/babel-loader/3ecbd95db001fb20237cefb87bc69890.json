{"ast":null,"code":"var _jsxFileName = \"/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/BlockchainData.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Tx from 'ethereumjs-tx';\nimport EthCrypto from 'eth-crypto';\nimport { MULTISIG_ABI, MULTISIG_ADDRESS } from './config';\nimport SmartContract from './SmartContract';\n\nclass BlockchainData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      web3: '',\n      multisig: '',\n      etherAddress: '',\n      etherBalance: '',\n      contractBalance: ''\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      etherAddress: props.etherAddress\n    };\n  }\n\n  componentDidMount() {\n    const web3 = new Web3('https://ropsten.infura.io/v3/a33baa265ae340c29c82373e91533edf');\n    this.setState({\n      web3: web3\n    });\n    const multisig = new web3.eth.Contract(MULTISIG_ABI, MULTISIG_ADDRESS);\n    this.setState({\n      multisig: multisig\n    });\n    web3.eth.getBalance(this.state.etherAddress, (error, balance) => {\n      if (error) {\n        console.log(error);\n      } else {\n        this.setState({\n          etherBalance: balance.toString(10)\n        });\n        console.log('Account ether balance: ', this.state.etherBalance);\n      }\n    });\n    multisig.methods.balances(this.state.etherAddress).call({\n      from: this.state.etherAddress\n    }, (error, balance) => {\n      if (error) {\n        console.log(error);\n      } else {\n        this.setState({\n          contractBalance: balance.toString(10)\n        });\n        console.log('The contract balance of account is: ', this.state.contractBalance);\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(SmartContract, {\n      address: this.props.etherAddress,\n      etherBalance: this.state.etherBalance,\n      contractBalance: this.state.contractBalance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BlockchainData;","map":{"version":3,"sources":["/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/BlockchainData.js"],"names":["React","Component","Web3","Tx","EthCrypto","MULTISIG_ABI","MULTISIG_ADDRESS","SmartContract","BlockchainData","constructor","props","state","web3","multisig","etherAddress","etherBalance","contractBalance","getDerivedStateFromProps","componentDidMount","setState","eth","Contract","getBalance","error","balance","console","log","toString","methods","balances","call","from","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,EAAP,MAAe,eAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,UAA/C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,cAAN,SAA6BP,SAA7B,CAAuC;AAEtCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAE,EADM;AAEZC,MAAAA,QAAQ,EAAE,EAFE;AAGZC,MAAAA,YAAY,EAAE,EAHF;AAIZC,MAAAA,YAAY,EAAE,EAJF;AAKZC,MAAAA,eAAe,EAAE;AALL,KAAb;AAOA;;AACD,SAAOC,wBAAP,CAAgCP,KAAhC,EAAuCC,KAAvC,EAA8C;AAC1C,WAAO;AAACG,MAAAA,YAAY,EAAEJ,KAAK,CAACI;AAArB,KAAP;AACD;;AAEDI,EAAAA,iBAAiB,GAAG;AACnB,UAAMN,IAAI,GAAG,IAAIV,IAAJ,CAAS,+DAAT,CAAb;AACA,SAAKiB,QAAL,CAAc;AAAEP,MAAAA,IAAI,EAAEA;AAAR,KAAd;AACA,UAAMC,QAAQ,GAAG,IAAID,IAAI,CAACQ,GAAL,CAASC,QAAb,CAAsBhB,YAAtB,EAAoCC,gBAApC,CAAjB;AACF,SAAKa,QAAL,CAAc;AAAEN,MAAAA,QAAQ,EAAEA;AAAZ,KAAd;AACAD,IAAAA,IAAI,CAACQ,GAAL,CAASE,UAAT,CAAoB,KAAKX,KAAL,CAAWG,YAA/B,EAA6C,CAACS,KAAD,EAAQC,OAAR,KAAoB;AAChE,UAAID,KAAJ,EAAW;AACVE,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,OAFD,MAEO;AACA,aAAKJ,QAAL,CAAc;AAAEJ,UAAAA,YAAY,EAAES,OAAO,CAACG,QAAR,CAAiB,EAAjB;AAAhB,SAAd;AACHF,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuC,KAAKf,KAAL,CAAWI,YAAlD;AACA;AACH,KAPF;AAQAF,IAAAA,QAAQ,CAACe,OAAT,CAAiBC,QAAjB,CAA0B,KAAKlB,KAAL,CAAWG,YAArC,EAAmDgB,IAAnD,CAAwD;AAACC,MAAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWG;AAAlB,KAAxD,EAAyF,CAACS,KAAD,EAAQC,OAAR,KAAoB;AACzG,UAAID,KAAJ,EAAW;AACPE,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACH,OAFD,MAEO;AACH,aAAKJ,QAAL,CAAc;AAAEH,UAAAA,eAAe,EAAEQ,OAAO,CAACG,QAAR,CAAiB,EAAjB;AAAnB,SAAd;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoD,KAAKf,KAAL,CAAWK,eAA/D;AACH;AACJ,KAPD;AAUE;;AACHgB,EAAAA,MAAM,GAAG;AACJ,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AACC,MAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWI,YADrB;AAEC,MAAA,YAAY,EAAE,KAAKH,KAAL,CAAWI,YAF1B;AAGC,MAAA,eAAe,EAAE,KAAKJ,KAAL,CAAWK,eAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAQH;;AAjDoC;;AAoDvC,eAAeR,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Tx from 'ethereumjs-tx';\nimport EthCrypto from 'eth-crypto';\nimport { MULTISIG_ABI, MULTISIG_ADDRESS } from './config';\nimport SmartContract from './SmartContract'; \n\nclass BlockchainData extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tweb3: '',\n\t\t\tmultisig: '',\n\t\t\tetherAddress: '',\n\t\t\tetherBalance: '',\n\t\t\tcontractBalance: ''\n\t\t}\n\t}\n\tstatic getDerivedStateFromProps(props, state) {\n    \treturn {etherAddress: props.etherAddress };\n  \t}\n\n  \tcomponentDidMount() {\n  \t\tconst web3 = new Web3('https://ropsten.infura.io/v3/a33baa265ae340c29c82373e91533edf');\n  \t\tthis.setState({ web3: web3 });\n  \t\tconst multisig = new web3.eth.Contract(MULTISIG_ABI, MULTISIG_ADDRESS);\n\t\tthis.setState({ multisig: multisig });\n\t\tweb3.eth.getBalance(this.state.etherAddress, (error, balance) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.log(error)\n\t\t\t} else {\n\t\t        this.setState({ etherBalance: balance.toString(10) });\n\t    \t\tconsole.log('Account ether balance: ', this.state.etherBalance);\n\t    \t}\n\t\t\t})\n\t\tmultisig.methods.balances(this.state.etherAddress).call({from: this.state.etherAddress}, (error, balance) => {\n\t\t    if (error) {\n\t\t        console.log(error)\n\t\t    } else {\n\t\t        this.setState({ contractBalance: balance.toString(10) });\n\t\t       \tconsole.log('The contract balance of account is: ', this.state.contractBalance);\n\t\t    }\n\t\t})\n\n\n  \t}\n\trender() {\n  \t  \treturn (\n      \t\t<div>\n        \t\t<SmartContract \n        \t\t\taddress={this.props.etherAddress} \n        \t\t\tetherBalance={this.state.etherBalance}\n        \t\t\tcontractBalance={this.state.contractBalance}/>\n      \t\t</div>  \n      \t);\n  }\n}\n\nexport default BlockchainData;\n"]},"metadata":{},"sourceType":"module"}