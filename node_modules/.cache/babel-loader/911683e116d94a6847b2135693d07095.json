{"ast":null,"code":"var _jsxFileName = \"/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/erc20/ERC20.js\";\nimport React, { Component } from 'react';\nimport '../Smart.css';\nimport ModalTokenAllowance from './ModalTokenAllowance.js';\nimport ModalAllowance from './ModalAllowance.js';\nimport ModalDepositERC from './ModalDepositERC.js';\nimport ModalTransferERCToken from './ModalTransferERCToken.js';\nimport ModalTransferERCSafely from './ModalTransferERCSafely.js';\nimport ModalRegisterSafetyAddress from './ModalRegisterSafetyAddress.js';\nimport ModalToken from '../ModalToken.js';\nimport ModalERCSafetyAddress from './ModalERCSafetyAddress.js';\nimport ModalERCSetLimit from './ModalERCSetLimit.js';\n\nclass ERC20 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      console.log(event.target.value);\n      let tokenName = event.target.value;\n      this.setState({\n        chosenTokenBalance: event.target.value\n      });\n\n      switch (tokenName) {\n        case 'tokenImperialBalance':\n          this.setState({\n            chosenToken: this.props.tokenImperial,\n            chosenTokenSymbol: '0x746f6b656e496d70657269616c00000000000000000000000000000000000000',\n            // Sets the token symbol to Imperial\n            chosenTokenContractBalance: 'tokenImperialContractBalance'\n          });\n          break;\n\n        case 'tokenDemocraticBalance':\n          this.setState({\n            chosenToken: this.props.tokenDemocratic,\n            chosenTokenSymbol: '0x746f6b656e44656d6f6372617469630000000000000000000000000000000000',\n            // Sets the token symbol to Democratic\n            chosenTokenContractBalance: 'tokenDemocraticContractBalance'\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.state = {\n      chosenTokenBalance: 'tokenImperialBalance',\n      chosenToken: this.props.tokenImperial,\n      chosenTokenSymbol: '0x746f6b656e496d70657269616c00000000000000000000000000000000000000',\n      chosenTokenContractBalance: 'tokenImperialContractBalance'\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"smartP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \" Your address: \", this.props.address), React.createElement(\"div\", {\n      className: \"smartDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: \"tokens\",\n      className: \"smartSelect\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"tokenImperialBalance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Token Imperial\"), React.createElement(\"option\", {\n      value: \"tokenDemocraticBalance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Token Democratic\"))), React.createElement(\"p\", {\n      className: \"smartP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \" Your token balance on Ethereum: \", this.props[this.state.chosenTokenBalance]), React.createElement(\"p\", {\n      className: \"smartP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" Your token contract balance: \", this.props[this.state.chosenTokenContractBalance]), React.createElement(ModalTokenAllowance, {\n      multisigERC20Address: this.props.multisigERC20Address,\n      token: this.state.chosenToken,\n      web3: this.props.web3,\n      address: this.props.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(ModalAllowance, {\n      multisigERC20Address: this.props.multisigERC20Address,\n      token: this.state.chosenToken,\n      address: this.props.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(ModalDepositERC, {\n      web3: this.props.web3,\n      multisigERC20Address: this.props.multisigERC20Address,\n      multisigERC20Token: this.props.multisigERC20Token,\n      address: this.props.address,\n      tokenSymbol: this.state.chosenTokenSymbol,\n      updateERCBalances: this.props.updateERCBalances,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(ModalTransferERCToken, {\n      web3: this.props.web3,\n      multisigERC20Address: this.props.multisigERC20Address,\n      multisigERC20Token: this.props.multisigERC20Token,\n      address: this.props.address,\n      tokenSymbol: this.state.chosenTokenSymbol,\n      updateERCBalances: this.props.updateERCBalances,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(ModalTransferERCSafely, {\n      web3: this.props.web3,\n      multisigERC20Address: this.props.multisigERC20Address,\n      multisigERC20Token: this.props.multisigERC20Token,\n      address: this.props.address,\n      tokenSymbol: this.state.chosenTokenSymbol,\n      updateERCBalances: this.props.updateERCBalances,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(ModalRegisterSafetyAddress, {\n      web3: this.props.web3,\n      multisigERC20Address: this.props.multisigERC20Address,\n      multisigERC20Token: this.props.multisigERC20Token,\n      address: this.props.address,\n      tokenSymbol: this.state.chosenTokenSymbol,\n      updateERCBalances: this.props.updateERCBalances,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(ModalToken, {\n      address: this.props.address,\n      web3: this.props.web3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(ModalERCSafetyAddress, {\n      multisigERC20Token: this.props.multisigERC20Token,\n      tokenSymbol: this.state.chosenTokenSymbol,\n      address: this.props.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(ModalERCSetLimit, {\n      web3: this.props.web3,\n      multisigERC20Address: this.props.multisigERC20Address,\n      multisigERC20Token: this.props.multisigERC20Token,\n      address: this.props.address,\n      tokenSymbol: this.state.chosenTokenSymbol,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ERC20;","map":{"version":3,"sources":["/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/erc20/ERC20.js"],"names":["React","Component","ModalTokenAllowance","ModalAllowance","ModalDepositERC","ModalTransferERCToken","ModalTransferERCSafely","ModalRegisterSafetyAddress","ModalToken","ModalERCSafetyAddress","ModalERCSetLimit","ERC20","constructor","props","handleChange","event","console","log","target","value","tokenName","setState","chosenTokenBalance","chosenToken","tokenImperial","chosenTokenSymbol","chosenTokenContractBalance","tokenDemocratic","state","render","address","multisigERC20Address","web3","multisigERC20Token","updateERCBalances"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../Smart.css';\nimport ModalTokenAllowance from './ModalTokenAllowance.js'; \nimport ModalAllowance from './ModalAllowance.js';\nimport ModalDepositERC from './ModalDepositERC.js';\nimport ModalTransferERCToken from './ModalTransferERCToken.js';\nimport ModalTransferERCSafely from './ModalTransferERCSafely.js';\nimport ModalRegisterSafetyAddress from './ModalRegisterSafetyAddress.js';\nimport ModalToken from '../ModalToken.js'; \nimport ModalERCSafetyAddress from './ModalERCSafetyAddress.js';\nimport ModalERCSetLimit from './ModalERCSetLimit.js';\n\nclass ERC20 extends Component {\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t       chosenTokenBalance: 'tokenImperialBalance',\n           chosenToken: this.props.tokenImperial,\n           chosenTokenSymbol: '0x746f6b656e496d70657269616c00000000000000000000000000000000000000',\n           chosenTokenContractBalance: 'tokenImperialContractBalance'\n\t    }\n  \t};\n\n    handleChange = (event) => {\n\n        console.log(event.target.value);\n        let tokenName = event.target.value;\n        this.setState({\n            chosenTokenBalance: event.target.value,\n        })\n        switch(tokenName) {\n            case 'tokenImperialBalance':\n                this.setState({\n                    chosenToken: this.props.tokenImperial,\n                    chosenTokenSymbol: '0x746f6b656e496d70657269616c00000000000000000000000000000000000000', // Sets the token symbol to Imperial\n                    chosenTokenContractBalance: 'tokenImperialContractBalance'\n                });\n                break;\n            case 'tokenDemocraticBalance':\n                this.setState({\n                    chosenToken: this.props.tokenDemocratic,\n                    chosenTokenSymbol: '0x746f6b656e44656d6f6372617469630000000000000000000000000000000000', // Sets the token symbol to Democratic\n                    chosenTokenContractBalance: 'tokenDemocraticContractBalance'\n                });\n                break;\n            default:\n                break;\n        }\n\n    }\n\n  \trender() {\n\n    return (\n      <div>\n        <p className=\"smartP\"> Your address: {this.props.address}</p>\n        <div className=\"smartDiv\">\n            <select name=\"tokens\" className=\"smartSelect\" onChange={this.handleChange}>\n                <option value=\"tokenImperialBalance\">Token Imperial</option>\n                <option value=\"tokenDemocraticBalance\">Token Democratic</option>\n            </select>\n        </div>\n        <p className=\"smartP\"> Your token balance on Ethereum: {this.props[this.state.chosenTokenBalance]}</p>\n        <p className=\"smartP\"> Your token contract balance: {this.props[this.state.chosenTokenContractBalance]}</p>\n        <ModalTokenAllowance \n            multisigERC20Address={this.props.multisigERC20Address}\n            token={this.state.chosenToken}\n            web3={this.props.web3}\n            address={this.props.address}\n        />\n        <ModalAllowance \n            multisigERC20Address={this.props.multisigERC20Address}\n            token={this.state.chosenToken}\n            address={this.props.address}\n        />\n        <ModalDepositERC \n            web3={this.props.web3}\n            multisigERC20Address={this.props.multisigERC20Address}\n            multisigERC20Token={this.props.multisigERC20Token}\n            address={this.props.address}\n            tokenSymbol={this.state.chosenTokenSymbol}\n            updateERCBalances={this.props.updateERCBalances}\n        />\n        <ModalTransferERCToken\n            web3={this.props.web3}\n            multisigERC20Address={this.props.multisigERC20Address}\n            multisigERC20Token={this.props.multisigERC20Token}\n            address={this.props.address}\n            tokenSymbol={this.state.chosenTokenSymbol}\n            updateERCBalances={this.props.updateERCBalances}\n        />\n        <ModalTransferERCSafely\n            web3={this.props.web3}\n            multisigERC20Address={this.props.multisigERC20Address}\n            multisigERC20Token={this.props.multisigERC20Token}\n            address={this.props.address}\n            tokenSymbol={this.state.chosenTokenSymbol}\n            updateERCBalances={this.props.updateERCBalances}\n        />\n        <ModalRegisterSafetyAddress\n            web3={this.props.web3}\n            multisigERC20Address={this.props.multisigERC20Address}\n            multisigERC20Token={this.props.multisigERC20Token}\n            address={this.props.address}\n            tokenSymbol={this.state.chosenTokenSymbol}\n            updateERCBalances={this.props.updateERCBalances}\n        />\n        <ModalToken \n            address={this.props.address}\n            web3={this.props.web3} />\n        <ModalERCSafetyAddress\n            multisigERC20Token={this.props.multisigERC20Token}\n            tokenSymbol={this.state.chosenTokenSymbol}\n            address={this.props.address} />  \n        <ModalERCSetLimit\n            web3={this.props.web3}\n            multisigERC20Address={this.props.multisigERC20Address}\n            multisigERC20Token={this.props.multisigERC20Token}\n            address={this.props.address}\n            tokenSymbol={this.state.chosenTokenSymbol} />      \n      </div>         \n      );\n  }\n}\n\nexport default ERC20;\n"]},"metadata":{},"sourceType":"module"}