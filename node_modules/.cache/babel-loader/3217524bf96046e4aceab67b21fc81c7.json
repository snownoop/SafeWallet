{"ast":null,"code":"var _jsxFileName = \"/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/erc20/ModalERCSafetyAddress.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nconst ModalTrigger = ({\n  onHandleClick,\n  handleInputChange\n}) => React.createElement(\"form\", {\n  id: \"SafetyForm\",\n  onSubmit: onHandleClick,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: \"text\",\n  name: \"addressToCheck\",\n  onChange: handleInputChange,\n  className: \"smartInput\",\n  placeholder: \"Account address\",\n  required: true,\n  minLength: \"42\",\n  maxLength: \"42\",\n  pattern: \"0x\\\\w+\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}), React.createElement(\"button\", {\n  type: \"submit\",\n  className: \"smartButton\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, \"safe address\"));\n\nconst ModalContent = ({\n  toggle,\n  modalRef,\n  onKeyDown,\n  onClickAway,\n  children\n}) => {\n  return ReactDOM.createPortal(React.createElement(\"aside\", {\n    className: \"c-modal-cover\",\n    onKeyDown: onKeyDown,\n    onClick: onClickAway,\n    tabIndex: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"c-modal-safety\",\n    ref: modalRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"c-modal__close\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    className: \"c-modal__close-icon\",\n    viewBox: \"0 0 40 40\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    d: \"M 10,10 L 30,30 M 30,10 L 10,30\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"c-modal__body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, children))), document.body);\n};\n\nclass ModalERCSafetyAddress extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n\n      switch (name) {\n        case 'addressToCheck':\n          if (event.target.validity.tooShort) {\n            event.target.setCustomValidity(\"Public key has to be 42 characters\");\n          } else if (event.target.validity.patternMismatch) {\n            event.target.setCustomValidity(\"Public key has to start with '0x'\");\n          } else {\n            event.target.setCustomValidity(\"\");\n          }\n\n        default:\n          break;\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onHandleClick = event => {\n      event.preventDefault();\n      this.props.multisigERC20Token.methods.safetyKeys(this.state.addressToCheck, this.props.tokenSymbol).call({\n        from: this.state.address\n      }, (error, safetyAddress) => {\n        if (error) {\n          console.log(error);\n        } else {\n          console.log(safetyAddress);\n          document.getElementById(\"SafetyForm\").reset();\n          this.setState({\n            safetyAddress: safetyAddress\n          });\n          this.toggle();\n        }\n      });\n    };\n\n    this.toggle = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.onKeyDown = event => {\n      return event.keyCode === 27 && this.toggle();\n    };\n\n    this.onClickAway = event => {\n      if (this.modalNode && this.modalNode.contains(event.target)) return;\n      this.toggle();\n    };\n\n    this.state = {\n      addressToCheck: '',\n      address: '',\n      safetyAddress: '',\n      isOpen: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      address: props.address\n    };\n  }\n\n  render() {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(ModalTrigger, {\n      onHandleClick: this.onHandleClick,\n      handleInputChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), this.state.isOpen && React.createElement(ModalContent, {\n      toggle: this.toggle,\n      onKeyDown: this.onKeyDown,\n      onClickAway: this.onClickAway,\n      modalRef: n => this.modalNode = n,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"modalText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Your selected token safety address is: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), this.state.safetyAddress)));\n  }\n\n}\n\nexport default ModalERCSafetyAddress;","map":{"version":3,"sources":["/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/erc20/ModalERCSafetyAddress.js"],"names":["React","Component","ReactDOM","ModalTrigger","onHandleClick","handleInputChange","ModalContent","toggle","modalRef","onKeyDown","onClickAway","children","createPortal","document","body","ModalERCSafetyAddress","constructor","props","event","target","value","name","validity","tooShort","setCustomValidity","patternMismatch","setState","preventDefault","multisigERC20Token","methods","safetyKeys","state","addressToCheck","tokenSymbol","call","from","address","error","safetyAddress","console","log","getElementById","reset","isOpen","keyCode","modalNode","contains","getDerivedStateFromProps","render","n"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nconst ModalTrigger = ({onHandleClick, handleInputChange}) => \n        <form id=\"SafetyForm\" onSubmit={onHandleClick}>\n          <input type=\"text\" name=\"addressToCheck\" onChange={handleInputChange} className=\"smartInput\" placeholder=\"Account address\" \n            required minLength=\"42\" maxLength=\"42\" pattern=\"0x\\w+\"/>\n          <button type=\"submit\" className=\"smartButton\">safe address</button>\n        </form>;\nconst ModalContent = ({toggle, modalRef, onKeyDown, onClickAway, children}) => {\n  return ReactDOM.createPortal(\n    <aside className=\"c-modal-cover\" onKeyDown={onKeyDown} onClick={onClickAway} tabIndex=\"0\">\n      <div className=\"c-modal-safety\" ref={modalRef}>\n        <button className=\"c-modal__close\" onClick={toggle}>\n          <svg className=\"c-modal__close-icon\" viewBox=\"0 0 40 40\"><path d=\"M 10,10 L 30,30 M 30,10 L 10,30\"></path></svg>\n        </button>\n        <div className=\"c-modal__body\">\n          {children}\n        </div>\n     </div>\n    </aside>,\n    document.body\n  );\n};\n\nclass ModalERCSafetyAddress extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      addressToCheck: '',\n      address: '',\n      safetyAddress: '',\n      isOpen: false\n    }\n  }\n  static getDerivedStateFromProps(props, state) {\n    return {address: props.address };\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    switch (name) {\n    case 'addressToCheck':\n      if (event.target.validity.tooShort) {\n        event.target.setCustomValidity(\"Public key has to be 42 characters\");\n      } else if (event.target.validity.patternMismatch) {\n        event.target.setCustomValidity(\"Public key has to start with '0x'\");\n      } else {\n        event.target.setCustomValidity(\"\");\n      }  \n    default:\n      break;\n    }\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  onHandleClick = (event) => {\n    event.preventDefault();\n    \n    this.props.multisigERC20Token.methods.safetyKeys(this.state.addressToCheck, this.props.tokenSymbol).call({ from: this.state.address }, (error, safetyAddress) => {\n      if (error) {\n        console.log(error);\n      } else {\n        console.log(safetyAddress);\n        document.getElementById(\"SafetyForm\").reset();\n        this.setState({ safetyAddress: safetyAddress});\n        this.toggle();\n      }\n    });\n    \n  }\n\n  toggle = () => {\n  this.setState({ \n    isOpen: !this.state.isOpen, \n    });\n  };\n\n  onKeyDown = (event) => {\n  return event.keyCode === 27 && this.toggle();\n  }\n  \n  onClickAway = (event) => {\n    if (this.modalNode && this.modalNode.contains(event.target)) return;\n    this.toggle();\n  };\n\n  render() {\n\n    return (\n      <span>\n       <ModalTrigger \n        onHandleClick={this.onHandleClick}\n        handleInputChange={this.handleInputChange}/>\n       {\n        this.state.isOpen && \n        <ModalContent \n          toggle={this.toggle} \n          onKeyDown={this.onKeyDown}\n          onClickAway={this.onClickAway}\n          modalRef={n => this.modalNode = n}> \n          <p className=\"modalText\">Your selected token safety address is: <br/>{this.state.safetyAddress}</p> \n        </ModalContent>\n       }\n      </span>\n    );\n  }\n}\n\nexport default ModalERCSafetyAddress;"]},"metadata":{},"sourceType":"module"}