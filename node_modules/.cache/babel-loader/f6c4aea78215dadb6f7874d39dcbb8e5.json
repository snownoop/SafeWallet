{"ast":null,"code":"var _jsxFileName = \"/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/todoList.js\";\nimport React, { Component } from 'react';\n\nclass todoList extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      id: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        fontFamily: 'courier',\n        border: '1px solid powderblue',\n        padding: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \" Account address:\", this.props.address), React.createElement(\"form\", {\n      class: \"form-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group mx-sm-3 mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"inputAmount\",\n      class: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Amount\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      id: \"inputAmount\",\n      placeholder: \"Amount to deposit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-primary mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Deposit Ether\")), React.createElement(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n        this.props.createTask(this.task.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"newTask\",\n      ref: input => this.task = input,\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Add task...\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      id: \"taskList\",\n      className: \"list-unstyled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.tasks.map((task, key) => {\n      return React.createElement(\"div\", {\n        className: \"taskTemplate\",\n        className: \"checkbox\",\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: task.id,\n        defaultChecked: task.completed,\n        onClick: event => {\n          this.props.toggle(this.checkbox.name);\n        },\n        ref: input => {\n          this.checkbox = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, task.content)));\n    })), React.createElement(\"ul\", {\n      id: \"completedTaskList\",\n      className: \"list-unstyled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default todoList;","map":{"version":3,"sources":["/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/todoList.js"],"names":["React","Component","todoList","render","fontFamily","border","padding","props","address","event","preventDefault","createTask","task","value","input","tasks","map","key","id","completed","toggle","checkbox","name","content"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass todoList extends Component {\n\n  render() {\n    return (\n      <div id=\"content\">\n        <p style={{fontFamily: 'courier', border: '1px solid powderblue',\n  padding: '10px', }}> Account address:{this.props.address}</p>\n        <form class=\"form-inline\">\n          <div class=\"form-group mx-sm-3 mb-2\">\n            <label for=\"inputAmount\" class=\"sr-only\">Amount</label>\n            <input type=\"text\" class=\"form-control\" id=\"inputAmount\" placeholder=\"Amount to deposit\"/>\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary mb-2\">Deposit Ether</button>\n        </form>\n        <form onSubmit={(event) => {\n          event.preventDefault();\n          this.props.createTask(this.task.value);\n        }}>\n          <input \n            id=\"newTask\" \n            ref={(input) => \n              this.task = input\n            } \n            type=\"text\" \n            className=\"form-control\" \n            placeholder=\"Add task...\" \n            required/>\n          <input type=\"submit\" hidden={true}/>\n        </form>\n        <ul id=\"taskList\" className=\"list-unstyled\">\n          { this.props.tasks.map((task, key) => {\n              return(\n                <div className=\"taskTemplate\" className=\"checkbox\" key={key}>\n                  <label>\n                    <input \n                    type=\"checkbox\" \n                    name={task.id}\n                    defaultChecked={task.completed}\n                    onClick={(event) => \n                      { this.props.toggle(this.checkbox.name); }\n                    }\n                    ref={(input) => {\n                      this.checkbox = input;\n                    }}/>\n                    <span className=\"content\">{task.content}</span>\n                  </label>\n                </div>\n                )\n                }\n              )\n          }\n        </ul>\n        <ul id=\"completedTaskList\" className=\"list-unstyled\">\n        </ul>\n      </div>         \n      );\n  }\n}\n\nexport default todoList;\n"]},"metadata":{},"sourceType":"module"}