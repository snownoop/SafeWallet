{"ast":null,"code":"var _jsxFileName = \"/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/ModalV1.js\";\nimport React, { Component } from 'react';\nimport { Button, Col, Form, FormGroup, Input, Container, Media, Modal, ModalHeader, ModalBody, ModalFooter, Row } from 'reactstrap';\n\nclass ModalV1 extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.tokenInputHandler = event => {\n      console.log(event.target.value);\n      this.setState({\n        token: event.target.value\n      });\n    };\n\n    this.generateSecret = () => {\n      var xhttp = new XMLHttpRequest();\n      var data = {\n        address: this.props.address\n      };\n\n      xhttp.onreadystatechange = () => {\n        if (xhttp.readyState === 4) {\n          // request is done\n          if (xhttp.status === 200) {\n            // successfully\n            var obj = JSON.parse(xhttp.responseText);\n            console.log(obj.secret);\n            this.setState({\n              secret: obj.secret\n            });\n          }\n        }\n      };\n\n      xhttp.open(\"POST\", \"http://localhost:5596/totp-generate\", true);\n      xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n      xhttp.send(JSON.stringify(data));\n    };\n\n    this.verifyToken = () => {};\n\n    this.state = {\n      modal: false,\n      token: '',\n      secret: ''\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    const externalCloseBtn = React.createElement(\"button\", {\n      className: \"close\",\n      style: {\n        position: 'absolute',\n        top: '15px',\n        right: '15px'\n      },\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"\\xD7\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Button, {\n      outline: true,\n      color: \"primary\",\n      className: \"btn mb-2\",\n      block: true,\n      onClick: () => {\n        this.toggle();\n        this.generateSecret();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"enable two-factor authentication\"), ' ', React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      className: this.props.className,\n      external: externalCloseBtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"2FA With Google Authenticator\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Col, {\n      xs: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Media, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Media, {\n      object: true,\n      src: this.state.secret,\n      alt: \"Generic placeholder image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      xs: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      name: \"token\",\n      placeholder: \"Token\",\n      style: {\n        height: \"100%\",\n        borderColor: \"purple\",\n        borderRadius: \"2px\"\n      },\n      onChange: this.tokenInputHandler,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(Col, {\n      xs: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Button, {\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Verify Token\"))))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}\n\nexport default ModalV1;","map":{"version":3,"sources":["/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/ModalV1.js"],"names":["React","Component","Button","Col","Form","FormGroup","Input","Container","Media","Modal","ModalHeader","ModalBody","ModalFooter","Row","ModalV1","constructor","props","tokenInputHandler","event","console","log","target","value","setState","token","generateSecret","xhttp","XMLHttpRequest","data","address","onreadystatechange","readyState","status","obj","JSON","parse","responseText","secret","open","setRequestHeader","send","stringify","verifyToken","state","modal","toggle","bind","prevState","render","externalCloseBtn","position","top","right","className","height","borderColor","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Col, Form, FormGroup, Input, Container, Media, Modal, ModalHeader, ModalBody, ModalFooter, Row } from 'reactstrap';\n\nclass ModalV1 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      token: '',\n      secret: ''\n    };\n\n    this.toggle = this.toggle.bind(this);\n  \t}\n\n  tokenInputHandler = (event) => {\n  \tconsole.log(event.target.value);\n  \tthis.setState({ token : event.target.value });\n  }\t\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  generateSecret = () => {\n  \tvar xhttp = new XMLHttpRequest();\n    var data = { address: this.props.address };\n    xhttp.onreadystatechange = () => {\n            if (xhttp.readyState === 4) { // request is done\n                if (xhttp.status === 200) { // successfully\n                    var obj = JSON.parse(xhttp.responseText);\n                    console.log(obj.secret);\n                    this.setState({ secret: obj.secret });\n                }\n            }\n        };\n    xhttp.open(\"POST\", \"http://localhost:5596/totp-generate\", true);\n    xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhttp.send(JSON.stringify(data));\n  }\n\n  verifyToken = () => {\n\n  }\n  render() {\n  \tconst externalCloseBtn = <button className=\"close\" style={{ position: 'absolute', top: '15px', right: '15px' }} onClick={this.toggle}>&times;</button>;\n    return (\n      <div>\n        <Button outline color=\"primary\" className=\"btn mb-2\" block onClick={() => { this.toggle(); this.generateSecret(); }}>enable two-factor authentication</Button>{' '}\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className} external={externalCloseBtn}>\n          <ModalHeader>2FA With Google Authenticator</ModalHeader>\n          <ModalBody>\n\t        <Container>\n\t\t        <Row>\n\t\t          <Col xs=\"3\"></Col>\n\t\t          <Col xs=\"6\">\n\t\t          \t<Media>\n\t\t\t          <Media object src={this.state.secret} alt=\"Generic placeholder image\" />\n\t\t\t        </Media>\n\t\t          </Col>\n\t\t          <Col xs=\"3\"></Col>\n\t\t        </Row>\n\t        </Container>\t\t              \n            <Container>\n\t\t        <Row>\n\t\t       \t  <Col xs=\"6\">\n\t\t            <Input \n\t\t            \ttype=\"text\" \n\t\t            \tname=\"token\" \n\t\t            \tplaceholder=\"Token\" \n\t\t            \tstyle={{height: \"100%\", \n\t\t\t\t\t\t\t    borderColor: \"purple\",\n\t\t\t\t\t\t\t    borderRadius: \"2px\"}}\n\t\t\t\t\t\tonChange={this.tokenInputHandler}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t          </Col>\n\t\t          <Col xs=\"6\">\n\t\t        \t<Button block>Verify Token</Button>\n\t\t          </Col>\n\t\t        </Row>\n\t\t     </Container>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.toggle}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ModalV1;"]},"metadata":{},"sourceType":"module"}