{"ast":null,"code":"import { Transaction } from 'ethereumjs-tx';\nimport publicKeyByPrivateKey from './public-key-by-private-key';\nimport { toAddress as addressByPublicKey } from './public-key';\nexport default function signTransaction(rawTx, privateKey) {\n  // check if privateKey->address matches rawTx.from\n  var publicKey = publicKeyByPrivateKey(privateKey);\n  var address = addressByPublicKey(publicKey);\n  if (address != rawTx.from) throw new Error('EthCrypto.signTransaction(): rawTx.from does not match the address of the privateKey');\n  var privateKeyBuffer = new Buffer(privateKey.replace(/^.{2}/g, ''), 'hex');\n  var tx = new Transaction(rawTx);\n  tx.sign(privateKeyBuffer);\n  var serializedTx = tx.serialize().toString('hex');\n  return serializedTx;\n}","map":null,"metadata":{},"sourceType":"module"}