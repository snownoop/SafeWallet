{"ast":null,"code":"import { sign as secp256k1_sign } from 'secp256k1';\nimport { addTrailing0x, removeTrailing0x } from './util';\n/**\n * signs the given message\n * we do not use sign from eth-lib because the pure secp256k1-version is 90% faster\n * @param  {string} privateKey\n * @param  {string} hash\n * @return {string} hexString\n */\n\nexport default function sign(privateKey, hash) {\n  hash = addTrailing0x(hash);\n  if (hash.length !== 66) throw new Error('EthCrypto.sign(): Can only sign hashes, given: ' + hash);\n  var sigObj = secp256k1_sign(new Buffer(removeTrailing0x(hash), 'hex'), new Buffer(removeTrailing0x(privateKey), 'hex'));\n  var recoveryId = sigObj.recovery === 1 ? '1c' : '1b';\n  var newSignature = '0x' + sigObj.signature.toString('hex') + recoveryId;\n  return newSignature;\n}","map":null,"metadata":{},"sourceType":"module"}