{"ast":null,"code":"var _jsxFileName = \"/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/ModalV1.js\";\nimport React, { Component } from 'react';\nimport { Button, Media, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass ModalV1 extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.generateSecret = () => {\n      var xhttp = new XMLHttpRequest();\n      var data = {\n        address: this.props.address\n      };\n\n      xhttp.onreadystatechange = function () {\n        if (xhttp.readyState === 4) {\n          // request is done\n          if (xhttp.status === 200) {\n            // successfully\n            var obj = JSON.parse(xhttp.responseText);\n            this.setState({\n              secret: obj.secret\n            });\n          }\n        }\n      };\n\n      xhttp.open(\"POST\", \"http://localhost:5596/totp-generate\", true);\n      xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n      xhttp.send(JSON.stringify(data));\n    };\n\n    this.state = {\n      modal: false,\n      secret: ''\n    };\n    this.toggle = this.toggle.bind(this);\n    this.generateSecret = this.generateSecret.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    const externalCloseBtn = React.createElement(\"button\", {\n      className: \"close\",\n      style: {\n        position: 'absolute',\n        top: '15px',\n        right: '15px'\n      },\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"\\xD7\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Button, {\n      outline: true,\n      color: \"primary\",\n      className: \"btn mb-2\",\n      block: true,\n      onClick: () => {\n        this.toggle();\n        this.generateSecret();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"enable two-factor authentication\"), ' ', React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      className: this.props.className,\n      external: externalCloseBtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"2FA With Google Authenticator\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Media, {\n      middle: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Media, {\n      object: true,\n      \"data-src\": this.state.secret,\n      alt: \"Generic placeholder image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Do Something\"), ' ', React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}\n\nexport default ModalV1;","map":{"version":3,"sources":["/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/ModalV1.js"],"names":["React","Component","Button","Media","Modal","ModalHeader","ModalBody","ModalFooter","ModalV1","constructor","props","generateSecret","xhttp","XMLHttpRequest","data","address","onreadystatechange","readyState","status","obj","JSON","parse","responseText","setState","secret","open","setRequestHeader","send","stringify","state","modal","toggle","bind","prevState","render","externalCloseBtn","position","top","right","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Media, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass ModalV1 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      secret: ''\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.generateSecret = this.generateSecret.bind(this);\n  \t}\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  generateSecret = () => {\n  \tvar xhttp = new XMLHttpRequest();\n    var data = { address: this.props.address };\n    xhttp.onreadystatechange = function() {\n            if (xhttp.readyState === 4) { // request is done\n                if (xhttp.status === 200) { // successfully\n                    var obj = JSON.parse(xhttp.responseText);\n                    this.setState({ secret: obj.secret });\n                }\n            }\n        };\n    xhttp.open(\"POST\", \"http://localhost:5596/totp-generate\", true);\n    xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhttp.send(JSON.stringify(data));\n  }\n\n  render() {\n  \tconst externalCloseBtn = <button className=\"close\" style={{ position: 'absolute', top: '15px', right: '15px' }} onClick={this.toggle}>&times;</button>;\n    return (\n      <div>\n        <Button outline color=\"primary\" className=\"btn mb-2\" block onClick={() => { this.toggle(); this.generateSecret(); }}>enable two-factor authentication</Button>{' '}\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className} external={externalCloseBtn}>\n          <ModalHeader>2FA With Google Authenticator</ModalHeader>\n          <ModalBody>\n          \t<Media middle>\n\t          <Media object data-src={this.state.secret} alt=\"Generic placeholder image\" />\n\t        </Media>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.toggle}>Do Something</Button>{' '}\n            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ModalV1;"]},"metadata":{},"sourceType":"module"}