{"ast":null,"code":"var _jsxFileName = \"/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/erc20/ERC20.js\";\nimport React, { Component } from 'react';\nimport '../Smart.css';\nimport ModalTokenAllowance from './ModalTokenAllowance.js';\nimport ModalAllowance from './ModalAllowance.js';\nimport ModalDepositERC from './ModalDepositERC.js';\nimport ModalTransferERCToken from './ModalTransferERCToken.js';\nimport ModalTransferERCSafely from './ModalTransferERCSafely.js';\nimport ModalDepositERCSafely from './ModalDepositERCSafely.js';\nimport ModalToken from '../ModalToken.js';\nimport ModalERCSafetyAddress from './ModalERCSafetyAddress.js';\nimport ModalERCSetLimit from './ModalERCSetLimit.js';\nimport ModalERCWithdrawLimit from './ModalERCWithdrawLimit.js';\nimport ModalRecoverERCSafely from './ModalRecoverERCSafely.js';\nimport ModalRecoverERC from './ModalRecoverERC.js';\n\nclass ERC20 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = e => {\n      e.preventDefault();\n      const name = e.target.name;\n      this.setState({\n        [name]: !this.state[name]\n      });\n    };\n\n    this.handleChange = event => {\n      console.log(event.target.value);\n      let tokenName = event.target.value;\n      this.setState({\n        chosenTokenBalance: event.target.value\n      });\n\n      switch (tokenName) {\n        case 'tokenImperialBalance':\n          this.setState({\n            chosenToken: this.props.tokenImperial,\n            chosenTokenSymbol: '0x746f6b656e496d70657269616c00000000000000000000000000000000000000',\n            // Sets the token symbol to Imperial\n            chosenTokenContractBalance: 'tokenImperialContractBalance'\n          });\n          break;\n\n        case 'tokenDemocraticBalance':\n          this.setState({\n            chosenToken: this.props.tokenDemocratic,\n            chosenTokenSymbol: '0x746f6b656e44656d6f6372617469630000000000000000000000000000000000',\n            // Sets the token symbol to Democratic\n            chosenTokenContractBalance: 'tokenDemocraticContractBalance'\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.state = {\n      chosenTokenBalance: 'tokenImperialBalance',\n      chosenToken: this.props.tokenImperial,\n      chosenTokenSymbol: '0x746f6b656e496d70657269616c00000000000000000000000000000000000000',\n      chosenTokenContractBalance: 'tokenImperialContractBalance',\n      depositOptions: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"smartP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" Your address: \", this.props.address), React.createElement(\"div\", {\n      className: \"smartDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: \"tokens\",\n      className: \"smartSelect\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"tokenImperialBalance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Token Imperial\"), React.createElement(\"option\", {\n      value: \"tokenDemocraticBalance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Token Democratic\"))), React.createElement(\"p\", {\n      className: \"smartP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" Your token balance on Ethereum: \", this.props[this.state.chosenTokenBalance]), React.createElement(\"p\", {\n      className: \"smartP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \" Your token contract balance: \", this.props[this.state.chosenTokenContractBalance]), React.createElement(\"button\", {\n      className: \"smartButtonLong\",\n      name: \"depositOptions\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"deposit options\"), this.state.depositOptions ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(ModalTokenAllowance, {\n      multisigERC20Address: this.props.multisigERC20Address,\n      token: this.state.chosenToken,\n      web3: this.props.web3,\n      address: this.props.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(ModalAllowance, {\n      multisigERC20Address: this.props.multisigERC20Address,\n      token: this.state.chosenToken,\n      address: this.props.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(ModalDepositERC, {\n      web3: this.props.web3,\n      multisigERC20Address: this.props.multisigERC20Address,\n      multisigERC20Token: this.props.multisigERC20Token,\n      address: this.props.address,\n      tokenSymbol: this.state.chosenTokenSymbol,\n      updateERCBalances: this.props.updateERCBalances,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(ModalDepositERCSafely, {\n      web3: this.props.web3,\n      multisigERC20Address: this.props.multisigERC20Address,\n      multisigERC20Token: this.props.multisigERC20Token,\n      address: this.props.address,\n      tokenSymbol: this.state.chosenTokenSymbol,\n      updateERCBalances: this.props.updateERCBalances,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })) : null, React.createElement(\"button\", {\n      className: \"smartButtonLong\",\n      name: \"transactionOptions\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"transaction options\"), this.state.transactionOptions ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(ModalTransferERCSafely, {\n      web3: this.props.web3,\n      multisigERC20Address: this.props.multisigERC20Address,\n      multisigERC20Token: this.props.multisigERC20Token,\n      address: this.props.address,\n      tokenSymbol: this.state.chosenTokenSymbol,\n      updateERCBalances: this.props.updateERCBalances,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(ModalTransferERCToken, {\n      web3: this.props.web3,\n      multisigERC20Address: this.props.multisigERC20Address,\n      multisigERC20Token: this.props.multisigERC20Token,\n      address: this.props.address,\n      tokenSymbol: this.state.chosenTokenSymbol,\n      updateERCBalances: this.props.updateERCBalances,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })) : null, React.createElement(ModalToken, {\n      address: this.props.address,\n      web3: this.props.web3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(ModalERCSafetyAddress, {\n      multisigERC20Token: this.props.multisigERC20Token,\n      tokenSymbol: this.state.chosenTokenSymbol,\n      address: this.props.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(ModalERCSetLimit, {\n      web3: this.props.web3,\n      multisigERC20Address: this.props.multisigERC20Address,\n      multisigERC20Token: this.props.multisigERC20Token,\n      address: this.props.address,\n      tokenSymbol: this.state.chosenTokenSymbol,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(ModalERCWithdrawLimit, {\n      web3: this.props.web3,\n      multisigERC20Address: this.props.multisigERC20Address,\n      multisigERC20Token: this.props.multisigERC20Token,\n      address: this.props.address,\n      tokenSymbol: this.state.chosenTokenSymbol,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(ModalRecoverERCSafely, {\n      web3: this.props.web3,\n      multisigERC20Address: this.props.multisigERC20Address,\n      multisigERC20Token: this.props.multisigERC20Token,\n      address: this.props.address,\n      tokenSymbol: this.state.chosenTokenSymbol,\n      updateERCBalances: this.props.updateERCBalances,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(ModalRecoverERC, {\n      web3: this.props.web3,\n      multisigERC20Address: this.props.multisigERC20Address,\n      multisigERC20Token: this.props.multisigERC20Token,\n      address: this.props.address,\n      tokenSymbol: this.state.chosenTokenSymbol,\n      updateERCBalances: this.props.updateERCBalances,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ERC20;","map":{"version":3,"sources":["/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/erc20/ERC20.js"],"names":["React","Component","ModalTokenAllowance","ModalAllowance","ModalDepositERC","ModalTransferERCToken","ModalTransferERCSafely","ModalDepositERCSafely","ModalToken","ModalERCSafetyAddress","ModalERCSetLimit","ModalERCWithdrawLimit","ModalRecoverERCSafely","ModalRecoverERC","ERC20","constructor","props","handleClick","e","preventDefault","name","target","setState","state","handleChange","event","console","log","value","tokenName","chosenTokenBalance","chosenToken","tokenImperial","chosenTokenSymbol","chosenTokenContractBalance","tokenDemocratic","depositOptions","render","address","multisigERC20Address","web3","multisigERC20Token","updateERCBalances","transactionOptions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../Smart.css';\nimport ModalTokenAllowance from './ModalTokenAllowance.js'; \nimport ModalAllowance from './ModalAllowance.js';\nimport ModalDepositERC from './ModalDepositERC.js';\nimport ModalTransferERCToken from './ModalTransferERCToken.js';\nimport ModalTransferERCSafely from './ModalTransferERCSafely.js';\nimport ModalDepositERCSafely from './ModalDepositERCSafely.js';\nimport ModalToken from '../ModalToken.js'; \nimport ModalERCSafetyAddress from './ModalERCSafetyAddress.js';\nimport ModalERCSetLimit from './ModalERCSetLimit.js';\nimport ModalERCWithdrawLimit from './ModalERCWithdrawLimit.js';\nimport ModalRecoverERCSafely from './ModalRecoverERCSafely.js';\nimport ModalRecoverERC from './ModalRecoverERC.js';\n\nclass ERC20 extends Component {\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t       chosenTokenBalance: 'tokenImperialBalance',\n           chosenToken: this.props.tokenImperial,\n           chosenTokenSymbol: '0x746f6b656e496d70657269616c00000000000000000000000000000000000000',\n           chosenTokenContractBalance: 'tokenImperialContractBalance',\n           depositOptions: false\n\t    }\n  \t};\n\n    handleClick = (e) => {\n        e.preventDefault();\n        const name = e.target.name;\n        this.setState({ [name]: !this.state[name] });\n    }\n\n    handleChange = (event) => {\n\n        console.log(event.target.value);\n        let tokenName = event.target.value;\n        this.setState({\n            chosenTokenBalance: event.target.value,\n        })\n        switch(tokenName) {\n            case 'tokenImperialBalance':\n                this.setState({\n                    chosenToken: this.props.tokenImperial,\n                    chosenTokenSymbol: '0x746f6b656e496d70657269616c00000000000000000000000000000000000000', // Sets the token symbol to Imperial\n                    chosenTokenContractBalance: 'tokenImperialContractBalance'\n                });\n                break;\n            case 'tokenDemocraticBalance':\n                this.setState({\n                    chosenToken: this.props.tokenDemocratic,\n                    chosenTokenSymbol: '0x746f6b656e44656d6f6372617469630000000000000000000000000000000000', // Sets the token symbol to Democratic\n                    chosenTokenContractBalance: 'tokenDemocraticContractBalance'\n                });\n                break;\n            default:\n                break;\n        }\n\n    }\n\n  \trender() {\n\n    return (\n      <div>\n        <p className=\"smartP\"> Your address: {this.props.address}</p>\n        <div className=\"smartDiv\">\n            <select name=\"tokens\" className=\"smartSelect\" onChange={this.handleChange}>\n                <option value=\"tokenImperialBalance\">Token Imperial</option>\n                <option value=\"tokenDemocraticBalance\">Token Democratic</option>\n            </select>\n        </div>\n        <p className=\"smartP\"> Your token balance on Ethereum: {this.props[this.state.chosenTokenBalance]}</p>\n        <p className=\"smartP\"> Your token contract balance: {this.props[this.state.chosenTokenContractBalance]}</p>\n        <button className=\"smartButtonLong\" name= \"depositOptions\" onClick={this.handleClick}>deposit options</button>\n        {\n        this.state.depositOptions ? \n        <React.Fragment>  \n        <ModalTokenAllowance \n            multisigERC20Address={this.props.multisigERC20Address}\n            token={this.state.chosenToken}\n            web3={this.props.web3}\n            address={this.props.address}\n        />\n        <ModalAllowance \n            multisigERC20Address={this.props.multisigERC20Address}\n            token={this.state.chosenToken}\n            address={this.props.address}\n        />\n        <ModalDepositERC \n            web3={this.props.web3}\n            multisigERC20Address={this.props.multisigERC20Address}\n            multisigERC20Token={this.props.multisigERC20Token}\n            address={this.props.address}\n            tokenSymbol={this.state.chosenTokenSymbol}\n            updateERCBalances={this.props.updateERCBalances}\n        />\n        <ModalDepositERCSafely\n            web3={this.props.web3}\n            multisigERC20Address={this.props.multisigERC20Address}\n            multisigERC20Token={this.props.multisigERC20Token}\n            address={this.props.address}\n            tokenSymbol={this.state.chosenTokenSymbol}\n            updateERCBalances={this.props.updateERCBalances}\n        />\n        </React.Fragment>\n        : null\n        }\n        <button className=\"smartButtonLong\" name= \"transactionOptions\" onClick={this.handleClick}>transaction options</button>\n        {\n        this.state.transactionOptions ? \n        <React.Fragment>       \n        <ModalTransferERCSafely\n            web3={this.props.web3}\n            multisigERC20Address={this.props.multisigERC20Address}\n            multisigERC20Token={this.props.multisigERC20Token}\n            address={this.props.address}\n            tokenSymbol={this.state.chosenTokenSymbol}\n            updateERCBalances={this.props.updateERCBalances}\n        />\n        <ModalTransferERCToken\n            web3={this.props.web3}\n            multisigERC20Address={this.props.multisigERC20Address}\n            multisigERC20Token={this.props.multisigERC20Token}\n            address={this.props.address}\n            tokenSymbol={this.state.chosenTokenSymbol}\n            updateERCBalances={this.props.updateERCBalances}\n        />\n        </React.Fragment>\n        : null\n        }    \n        <ModalToken \n            address={this.props.address}\n            web3={this.props.web3} />\n        <ModalERCSafetyAddress\n            multisigERC20Token={this.props.multisigERC20Token}\n            tokenSymbol={this.state.chosenTokenSymbol}\n            address={this.props.address} />  \n        <ModalERCSetLimit\n            web3={this.props.web3}\n            multisigERC20Address={this.props.multisigERC20Address}\n            multisigERC20Token={this.props.multisigERC20Token}\n            address={this.props.address}\n            tokenSymbol={this.state.chosenTokenSymbol} />\n        <ModalERCWithdrawLimit\n            web3={this.props.web3}\n            multisigERC20Address={this.props.multisigERC20Address}\n            multisigERC20Token={this.props.multisigERC20Token}\n            address={this.props.address}\n            tokenSymbol={this.state.chosenTokenSymbol} />\n        <ModalRecoverERCSafely         \n            web3={this.props.web3}\n            multisigERC20Address={this.props.multisigERC20Address}\n            multisigERC20Token={this.props.multisigERC20Token}\n            address={this.props.address}\n            tokenSymbol={this.state.chosenTokenSymbol} \n            updateERCBalances={this.props.updateERCBalances} />  \n        <ModalRecoverERC         \n            web3={this.props.web3}\n            multisigERC20Address={this.props.multisigERC20Address}\n            multisigERC20Token={this.props.multisigERC20Token}\n            address={this.props.address}\n            tokenSymbol={this.state.chosenTokenSymbol} \n            updateERCBalances={this.props.updateERCBalances} /> \n      </div>         \n      );\n  }\n}\n\nexport default ERC20;\n"]},"metadata":{},"sourceType":"module"}