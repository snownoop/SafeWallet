{"ast":null,"code":"var _jsxFileName = \"/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/erc20/ERC20.js\";\nimport React, { Component } from 'react';\nimport '../Smart.css';\n\nclass SelectBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: this.props.items || [],\n      showItems: false\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"selectBoxArrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"\".concat(this.state.showItems ? 'selectBoxArrowUp' : 'selectBoxArrowDown'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        display: this.state.showItems ? 'block' : 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, this.state.items.map(item => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \" key =\", item.id, item.value))));\n  }\n\n}\n\nclass ERC20 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        chosenTokenBalance: event.target.value\n      });\n    };\n\n    this.state = {\n      chosenTokenBalance: 'tokenImperialBalance'\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"smartP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \" Your address: \", this.props.address), React.createElement(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(SelectBox, {\n      items: [{\n        value: 'United States',\n        id: 1\n      }, {\n        value: 'United Kingdom',\n        id: 2\n      }, {\n        value: 'Ukraine',\n        id: 3\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"smartDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: \"tokens\",\n      className: \"smartSelect\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"tokenImperialBalance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Token Imperial\"), React.createElement(\"option\", {\n      value: \"tokenDemocraticBalance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Token Democratic\")), React.createElement(\"p\", {\n      className: \"smartErcP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \" balance: \", this.props[this.state.chosenTokenBalance])));\n  }\n\n}\n\nexport default ERC20;","map":{"version":3,"sources":["/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/erc20/ERC20.js"],"names":["React","Component","SelectBox","constructor","props","state","items","showItems","render","display","map","item","id","value","ERC20","handleChange","event","setState","chosenTokenBalance","target","address","position"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../Smart.css';\n\nclass SelectBox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n           items: this.props.items || [],\n           showItems: false\n        }\n    };\n\n    render() {\n\n    return (\n      <React.Fragment> \n      <div className=\"selectBoxArrow\">\n        <span \n            className={`${this.state.showItems? 'selectBoxArrowUp' : 'selectBoxArrowDown'}`} />\n      </div>  \n      <div style={{display: this.state.showItems? 'block' : 'none'}}>\n        {\n            this.state.items.map(item => <div> key ={ item.id } \n                    { item.value }\n                </div>)\n        }\n      </div>   \n      </React.Fragment>       \n      );\n    }\n}\nclass ERC20 extends Component {\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t       chosenTokenBalance: 'tokenImperialBalance'\n\t    }\n  \t};\n\n    handleChange = (event) => {\n        this.setState({chosenTokenBalance: event.target.value});\n    }\n\n  \trender() {\n\n    return (\n      <div>\n        <p className=\"smartP\"> Your address: {this.props.address}</p>\n        <div style={{ position: 'relative' }}>\n            <SelectBox \n                items={[\n                    { value: 'United States', id: 1 },\n                    { value: 'United Kingdom', id: 2 },\n                    { value: 'Ukraine', id: 3 }\n                ]} \n            />\n        </div>\n        <div className=\"smartDiv\">\n            <select name=\"tokens\" className=\"smartSelect\" onChange={this.handleChange}>\n                <option value=\"tokenImperialBalance\">Token Imperial</option>\n                <option value=\"tokenDemocraticBalance\">Token Democratic</option>\n            </select>\n            <p className=\"smartErcP\"> balance: {this.props[this.state.chosenTokenBalance]}</p>\n        </div>\n      </div>         \n      );\n  }\n}\n\nexport default ERC20;\n"]},"metadata":{},"sourceType":"module"}