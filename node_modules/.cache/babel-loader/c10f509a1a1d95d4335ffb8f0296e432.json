{"ast":null,"code":"var _jsxFileName = \"/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport { MULTISIG_ABI, MULTISIG_ADDRESS } from './config';\nimport Login from './Login.js';\nimport BlockchainData from './FetchingBlockchainData.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setAddress = address => {\n      this.setState({\n        loading: true\n      });\n      this.setState({\n        etherAddress: address,\n        login: true,\n        loading: false\n      });\n    };\n\n    this.state = {\n      etherAddress: '',\n      login: false,\n      loading: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.state.loading ? null : this.state.login ? React.createElement(BlockchainData, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }) : React.createElement(Login, {\n      setAddress: this.setAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/App.js"],"names":["React","Component","Web3","MULTISIG_ABI","MULTISIG_ADDRESS","Login","BlockchainData","App","constructor","props","setAddress","address","setState","loading","etherAddress","login","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,UAA/C;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAE1BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,UATmB,GASLC,OAAD,IAAa;AACxB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,WAAKD,QAAL,CAAc;AACZE,QAAAA,YAAY,EAAEH,OADF;AAEZI,QAAAA,KAAK,EAAE,IAFK;AAGZF,QAAAA,OAAO,EAAE;AAHG,OAAd;AAKD,KAhBkB;;AAEjB,SAAKG,KAAL,GAAa;AACXF,MAAAA,YAAY,EAAE,EADH;AAEXC,MAAAA,KAAK,EAAE,KAFI;AAGXF,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AAWDI,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKD,KAAL,CAAWH,OAAX,GAAqB,IAArB,GACA,KAAKG,KAAL,CAAWD,KAAX,GAAmB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnB,GAAwC,oBAAC,KAAD;AAAO,MAAA,UAAU,EAAE,KAAKL,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF5C,CADF;AAMD;;AA3ByB;;AA8B5B,eAAeH,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport { MULTISIG_ABI, MULTISIG_ADDRESS } from './config';\nimport Login from './Login.js';\nimport BlockchainData from './FetchingBlockchainData.js';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      etherAddress: '',\n      login: false,\n      loading: false\n    }\n  };\n\n  setAddress = (address) => {\n    this.setState({ loading: true });\n    this.setState({ \n      etherAddress: address,\n      login: true,\n      loading: false\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        { this.state.loading ? null :\n          this.state.login ? <BlockchainData /> : <Login setAddress={this.setAddress} /> }\n      </div>  \n      );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}