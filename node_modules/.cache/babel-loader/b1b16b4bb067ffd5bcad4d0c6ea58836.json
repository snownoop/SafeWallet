{"ast":null,"code":"var _jsxFileName = \"/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/ModalNonce.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nconst ModalTrigger = ({\n  findNonce\n}) => React.createElement(\"button\", {\n  className: \"smartButtonLong\",\n  onClick: findNonce,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, \"check current nonce\");\n\nconst ModalContent = ({\n  toggle,\n  modalRef,\n  onKeyDown,\n  onClickAway,\n  children\n}) => {\n  return ReactDOM.createPortal(React.createElement(\"aside\", {\n    className: \"c-modal-cover\",\n    onKeyDown: onKeyDown,\n    onClick: onClickAway,\n    tabIndex: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"c-modal\",\n    ref: modalRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"c-modal__close\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    className: \"c-modal__close-icon\",\n    viewBox: \"0 0 40 40\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    d: \"M 10,10 L 30,30 M 30,10 L 10,30\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"c-modal__body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, children))), document.body);\n};\n\nclass ModalNonce extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        isOpen: !this.state.isOpen,\n        notVerified: true\n      });\n    };\n\n    this.onKeyDown = event => {\n      return event.keyCode === 27 && this.toggle();\n    };\n\n    this.onClickAway = event => {\n      if (this.modalNode && this.modalNode.contains(event.target)) return;\n      this.toggle();\n    };\n\n    this.tokenInputHandler = event => {\n      this.setState({\n        token: event.target.value\n      });\n    };\n\n    this.state = {\n      isOpen: false,\n      nonce: '',\n      loading: true\n    };\n  }\n\n  findNonce() {\n    this.props.getNonce().then(result => {\n      this.setState({\n        nonce: result,\n        loading: false\n      });\n      this.toggle();\n    }).catch(console.log);\n  }\n  /*async getRepos() {\n        var axiosInstance = axios.create({\n            baseURL: 'https://api.github.com/user',\n            headers: {\n            'Authorization': `token ${GH_TOKEN}`\n            }\n        })\n        try {\n            let response = await axiosInstance.get('/repos')\n            this.setState({\n                repos: response.data,\n               btnPressed: true\n            })\n        } catch (err) {\n            console.error(err)\n        }\n    }\n  */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(ModalTrigger, {\n      findNonce: this.findNonce,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), this.state.isOpen && React.createElement(ModalContent, {\n      toggle: this.toggle,\n      onKeyDown: this.onKeyDown,\n      onClickAway: this.onClickAway,\n      modalRef: n => this.modalNode = n,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.loading ? null : React.createElement(\"p\", {\n      className: \"modalHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Your current nonce is: \", this.state.nonce)));\n  }\n\n}\n\nexport default ModalNonce;","map":{"version":3,"sources":["/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/ModalNonce.js"],"names":["React","Component","ReactDOM","ModalTrigger","findNonce","ModalContent","toggle","modalRef","onKeyDown","onClickAway","children","createPortal","document","body","ModalNonce","constructor","props","setState","isOpen","state","notVerified","event","keyCode","modalNode","contains","target","tokenInputHandler","token","value","nonce","loading","getNonce","then","result","catch","console","log","render","n"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nconst ModalTrigger = ({findNonce}) => <button className=\"smartButtonLong\" onClick={findNonce}>check current nonce</button>;\nconst ModalContent = ({toggle, modalRef, onKeyDown, onClickAway, children}) => {\n\treturn ReactDOM.createPortal(\n\t\t<aside className=\"c-modal-cover\" onKeyDown={onKeyDown} onClick={onClickAway} tabIndex=\"0\">\n\t\t  <div className=\"c-modal\" ref={modalRef}>\n\t\t    <button className=\"c-modal__close\" onClick={toggle}>\n\t\t      <svg className=\"c-modal__close-icon\" viewBox=\"0 0 40 40\"><path d=\"M 10,10 L 30,30 M 30,10 L 10,30\"></path></svg>\n\t\t    </button>\n\t\t    <div className=\"c-modal__body\">\n\t\t      {children}\n\t\t    </div>\n\t\t </div>\n\t\t</aside>,\n\t\tdocument.body\n\t);\n};\n\nclass ModalNonce extends React.Component {\n\n  constructor(props) {\n  \tsuper(props);\n  \tthis.state = {\n  \t\tisOpen: false,\n      nonce: '',\n      loading: true\n  \t}\n  }\n\n  toggle = () => {\n\tthis.setState({ \n\t\tisOpen: !this.state.isOpen, \n\t  notVerified: true\n\t  });\n  };\n\n  onKeyDown = (event) => {\n\treturn event.keyCode === 27 && this.toggle();\n  }\n  \n  onClickAway = (event) => {\n\t  if (this.modalNode && this.modalNode.contains(event.target)) return;\n\t  this.toggle();\n\t};\n\n  tokenInputHandler = (event) => {\n  \tthis.setState({ token : event.target.value });\n  }\t\n\n  findNonce() {\n    this.props.getNonce().then((result) => {\n      this.setState({ nonce: result , loading: false});\n      this.toggle();\n    }).catch(console.log)\n  }\n\n  /*async getRepos() {\n        var axiosInstance = axios.create({\n            baseURL: 'https://api.github.com/user',\n            headers: {\n            'Authorization': `token ${GH_TOKEN}`\n            }\n        })\n        try {\n            let response = await axiosInstance.get('/repos')\n            this.setState({\n                repos: response.data,\n               btnPressed: true\n            })\n        } catch (err) {\n            console.error(err)\n        }\n    }\n*/\n\n  render() {\n\n  \treturn (\n      <div>\n       <ModalTrigger findNonce={this.findNonce}/>\n       {\n       \tthis.state.isOpen && \n       \t<ModalContent \n       \t\ttoggle={this.toggle} \n       \t\tonKeyDown={this.onKeyDown}\n       \t\tonClickAway={this.onClickAway}\n       \t\tmodalRef={n => this.modalNode = n}> \n       \t\t{this.state.loading ? null : <p className=\"modalHeader\">Your current nonce is: {this.state.nonce}</p> }\n       \t</ModalContent>\n       }\n      </div>\n    );\n  }\n}\n\nexport default ModalNonce;"]},"metadata":{},"sourceType":"module"}