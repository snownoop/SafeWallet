{"ast":null,"code":"var _jsxFileName = \"/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/ModalSafetyAddress.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nconst ModalTrigger = ({\n  toggle,\n  getSafetyAddress,\n  handleInputChange\n}) => React.createElement(\"form\", {\n  id: \"SafetyForm\",\n  onSubmit: getSafetyAddress,\n  novalidate: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  for: \"account address\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: \"text\",\n  name: \"addressToCheck\",\n  onChange: handleInputChange,\n  className: \"smartInput\",\n  placeholder: \"Account address\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}), React.createElement(\"span\", {\n  id: \"addressErr\",\n  class: \"errorMsg\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n})));\n\nconst ModalContent = ({\n  toggle,\n  modalRef,\n  onKeyDown,\n  onClickAway,\n  children\n}) => {\n  return ReactDOM.createPortal(React.createElement(\"aside\", {\n    className: \"c-modal-cover\",\n    onKeyDown: onKeyDown,\n    onClick: onClickAway,\n    tabIndex: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"c-modal-safety\",\n    ref: modalRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"c-modal__close\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    className: \"c-modal__close-icon\",\n    viewBox: \"0 0 40 40\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    d: \"M 10,10 L 30,30 M 30,10 L 10,30\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"c-modal__body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, children))), document.body);\n};\n\nclass ModalSafetyAddr extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n      console.log(this.state.addressToCheck);\n    };\n\n    this.getSafetyAddress = event => {\n      event.preventDefault();\n      let my = this;\n      this.props.getSafetyAddress(this.state.addressToCheck).then(result => {\n        my.setState({\n          address: result\n        });\n      });\n      document.getElementById(\"SafetyForm\").reset();\n    };\n\n    this.toggle = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.onKeyDown = event => {\n      return event.keyCode === 27 && this.toggle();\n    };\n\n    this.onClickAway = event => {\n      if (this.modalNode && this.modalNode.contains(event.target)) return;\n      this.toggle();\n    };\n\n    this.state = {\n      addressToCheck: '',\n      address: '',\n      isOpen: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(ModalTrigger, {\n      toggle: this.toggle,\n      getSafetyAddress: this.getSafetyAddress,\n      handleInputChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), this.state.isOpen && React.createElement(ModalContent, {\n      toggle: this.toggle,\n      onKeyDown: this.onKeyDown,\n      onClickAway: this.onClickAway,\n      modalRef: n => this.modalNode = n,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"modalHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Your current safety address is: \", this.state.address)));\n  }\n\n}\n\nexport default ModalSafetyAddr;","map":{"version":3,"sources":["/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/ModalSafetyAddress.js"],"names":["React","Component","ReactDOM","ModalTrigger","toggle","getSafetyAddress","handleInputChange","ModalContent","modalRef","onKeyDown","onClickAway","children","createPortal","document","body","ModalSafetyAddr","constructor","props","event","target","value","name","setState","console","log","state","addressToCheck","preventDefault","my","then","result","address","getElementById","reset","isOpen","keyCode","modalNode","contains","render","n"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nconst ModalTrigger = ({toggle, getSafetyAddress, handleInputChange}) => \n        <form id=\"SafetyForm\" onSubmit={getSafetyAddress} novalidate>\n          <label for=\"account address\">\n            <input type=\"text\" name=\"addressToCheck\" onChange={handleInputChange} className=\"smartInput\" placeholder=\"Account address\"/>\n            <span id=\"addressErr\" class=\"errorMsg\"></span>\n          </label>\n        </form>;\nconst ModalContent = ({toggle, modalRef, onKeyDown, onClickAway, children}) => {\n\treturn ReactDOM.createPortal(\n\t\t<aside className=\"c-modal-cover\" onKeyDown={onKeyDown} onClick={onClickAway} tabIndex=\"0\">\n\t\t  <div className=\"c-modal-safety\" ref={modalRef}>\n\t\t    <button className=\"c-modal__close\" onClick={toggle}>\n\t\t      <svg className=\"c-modal__close-icon\" viewBox=\"0 0 40 40\"><path d=\"M 10,10 L 30,30 M 30,10 L 10,30\"></path></svg>\n\t\t    </button>\n\t\t    <div className=\"c-modal__body\">\n\t\t      {children}\n\t\t    </div>\n\t\t </div>\n\t\t</aside>,\n\t\tdocument.body\n\t);\n};\n\nclass ModalSafetyAddr extends React.Component {\n\n  constructor(props) {\n  \tsuper(props);\n  \tthis.state = {\n      addressToCheck: '',\n      address: '',\n  \t\tisOpen: false\n    }\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n    console.log(this.state.addressToCheck);\n  }\n\n  getSafetyAddress = (event) => {\n    event.preventDefault();\n    let my = this;\n    this.props.getSafetyAddress(this.state.addressToCheck).then((result) => {\n      my.setState({ address: result });\n    })\n    document.getElementById(\"SafetyForm\").reset();\n  }\n\n\n  toggle = () => {\n\tthis.setState({ \n\t\tisOpen: !this.state.isOpen, \n\t  });\n  };\n\n  onKeyDown = (event) => {\n\treturn event.keyCode === 27 && this.toggle();\n  }\n  \n  onClickAway = (event) => {\n\t  if (this.modalNode && this.modalNode.contains(event.target)) return;\n\t  this.toggle();\n\t};\n\n  render() {\n\n  \treturn (\n      <span>\n       <ModalTrigger \n        toggle={this.toggle} \n        getSafetyAddress={this.getSafetyAddress}\n        handleInputChange={this.handleInputChange}/>\n       {\n       \tthis.state.isOpen && \n       \t<ModalContent \n       \t\ttoggle={this.toggle} \n       \t\tonKeyDown={this.onKeyDown}\n       \t\tonClickAway={this.onClickAway}\n       \t\tmodalRef={n => this.modalNode = n}> \n       \t\t<p className=\"modalHeader\">Your current safety address is: {this.state.address}</p> \n       \t</ModalContent>\n       }\n      </span>\n    );\n  }\n}\n\nexport default ModalSafetyAddr;"]},"metadata":{},"sourceType":"module"}