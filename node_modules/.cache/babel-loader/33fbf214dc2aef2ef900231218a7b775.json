{"ast":null,"code":"var _jsxFileName = \"/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport { MULTISIG_ABI, MULTISIG_ADDRESS } from './config';\nimport TodoList from './todoList';\n\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n    const network = await web3.eth.net.getNetworkType();\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const multisig = new web3.eth.Contract(MULTISIG_ABI, MULTISIG_ADDRESS);\n    this.setState({\n      multisig\n    });\n    this.state.multisig.methods.balances(address).call({\n      from: this.state.account\n    }, function (error, result) {\n      if (!error) {\n        console.log(result);\n        this.setState({\n          balance: result\n        });\n      }\n    });\n    this.setState({\n      loading: false\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      balance: '',\n      loading: true\n    }; // this.checkBalance = this.checkBalance.bind(this);\n  }\n\n  createTask(content) {\n    this.setState({\n      loading: true\n    });\n    this.state.todoList.methods.createTask(content).send({\n      from: this.state.account\n    }).once('receipt', receipt => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n  /*\n    checkBalance(address) {\n      //this.setState({ loading: true })\n      this.state.multisig.methods.balances(address).call({ from: this.state.account }, function(error, result){\n        if (!error) {\n          console.log(result);\n          return result;\n        }\n      });\n      /*.then('result', (result) => {\n        //this.setState({ loading: false});\n        return result.toString();\n      })\n   }*/\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"main\", {\n      role: \"main\",\n      className: \"col-lg-12 d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(\"div\", {\n      id: \"loader\",\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Loading...\")) : React.createElement(TodoList, {\n      balance: this.state.balance,\n      address: this.state.account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Raid/Mastering_Ethereum/DevelopingFirstDapp/Testing/src/App.js"],"names":["React","Component","Web3","MULTISIG_ABI","MULTISIG_ADDRESS","TodoList","App","componentWillMount","loadBlockchainData","web3","givenProvider","network","eth","net","getNetworkType","accounts","getAccounts","setState","account","multisig","Contract","state","methods","balances","address","call","from","error","result","console","log","balance","loading","constructor","props","createTask","content","todoList","send","once","receipt","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport { MULTISIG_ABI, MULTISIG_ADDRESS } from './config';\nimport TodoList from './todoList';\n\nclass App extends Component {\n\n  componentWillMount() {\n    this.loadBlockchainData();\n  }\n  async loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n    const network = await web3.eth.net.getNetworkType();\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] });\n    const multisig = new web3.eth.Contract(MULTISIG_ABI, MULTISIG_ADDRESS);\n    this.setState({ multisig });\n    this.state.multisig.methods.balances(address).call({ from: this.state.account }, function(error, result){\n      if (!error) {\n        console.log(result);\n        this.setState({balance : result});\n      }\n    });\n    this.setState({ loading : false });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = { \n      account: '',\n      balance: '',\n      loading: true\n    };\n   // this.checkBalance = this.checkBalance.bind(this);\n  }\n\n  createTask(content) {\n    this.setState({ loading: true })\n    this.state.todoList.methods.createTask(content).send({ from: this.state.account })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n  }\n/*\n  checkBalance(address) {\n    //this.setState({ loading: true })\n    this.state.multisig.methods.balances(address).call({ from: this.state.account }, function(error, result){\n      if (!error) {\n        console.log(result);\n        return result;\n      }\n    });\n    /*.then('result', (result) => {\n      //this.setState({ loading: false});\n      return result.toString();\n    })\n }*/\n\n\n  render() {\n    return (\n      <div>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex justify-content-center\">\n              { this.state.loading \n                ? <div id=\"loader\" className=\"text-center\"><p className=\"text-center\">Loading...</p></div> \n                : <TodoList \n                balance={this.state.balance}\n                address={this.state.account} \n                /> \n              }\n            </main>\n          </div>\n        </div>\n    \n      </div>  \n      );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}